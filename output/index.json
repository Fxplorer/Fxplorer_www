[{"uri":"/fsdocs_step2.html","title":"fsdocs_step2","content":"Go through the github actions and make updates\n","headings":[],"type":"content"},{"uri":"/index.html","title":"index","content":"Hello world (index.md)\n","headings":[],"type":"content"},{"uri":"/fsdocs_initial_install.html","title":"Overview\n","content":"Overview\nThe goal of this workbook is to initialize the FSharp.Formatting document creation utility in one\u0027s own repo. The intent is to use FSharp.Formatting to make a blog.\nThis workbook should be placed in the repo root. FSharp.Formatting may be initialized using the dotnet tool utility.\nThe standard setup is to have RepoRoot/docs where all your documentation .md and .fsx, etc files go. fsdocs will search through this directory and create the *.html files in the RepoRoot/output directory. There are customizations that can be set using the docs in the FSharp.Formatting repo. If a docs directoy is needed, run:\nmkdir docs\n\n::note By making the block a PowerShell, it can be executed right in the notebook.\ndotnet tool will error without a \u0022Dotnet local tool manifest file\u0022.\nCreate one:\ndotnet new tool-manifest\n\nThe template \u0022Dotnet local tool manifest file\u0022 was created successfully.\n\nThe basic command to install Fsharp.Formatting is:\ndotnet tool install --local fsdocs-tool\n\nYou can invoke the tool from this directory using the following commands: \u0027dotnet tool run fsdocs\u0027 or \u0027dotnet fsdocs\u0027.\nTool \u0027fsdocs-tool\u0027 (version \u002720.0.0\u0027) was successfully installed. Entry is added to the manifest file /home/linux/CODE/Fxplorer_www/.config/dotnet-tools.json.\n\nfsdocs watch will launch a browser and allow you to browse your created docs. When it launches, it will try to hit index.html and will then 404. One needs to have a index.md or index.fsx file in the docs directy so fsdocs will create the index.html.\nRunning the build command will search through and generate all the html into an RepoRoot/ output directory.\ndotnet fsdocs build\n\nBased on trial and error. The logo is set to /img/logo.png by default. That logo is missing in the inital run. The \u0022input\u0022 directory is the docs by default. So fsdocs will convert to html the files in the directory and parady the structure. It will simply copy over anything it finds that is not a file to process (like .fsx,.md,.ipynb, etc.)\nSolution File\nThe recomendation is a solution file in the root folder. Then any projects in the /src directory.\ndotnet new sln --name Fxplorer_www\n\n::side note\nthe /src has history on why that is used, so it is basically is historical convention.\n:: reference\nhttps://garywoodfine.com/what-is-this-directory-build-props-file-all-about/\n","headings":["Overview","Solution File"],"type":"content"}]